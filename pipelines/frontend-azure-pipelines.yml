trigger:
  branches:
   include:
     - master
  paths:
    include:
      - CaffStore.Frontend/*

pr:
  branches:
   include:
     - master

variables:
  workingDirectory: $(Build.SourcesDirectory)/CaffStore.Frontend

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'sonarCloudFrontend'
              organization: 'bodnarkevin'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'caffly-frontend'
              extraProperties: |
                sonar.projectBaseDir=$(workingDirectory)
                sonar.sources=src
                sonar.tests=src
                sonar.exclusions=**/*.spec.ts,**/*.js
                sonar.test.inclusions=**/*.spec.ts
                sonar.coverage.exclusions=**/*.js,src/main.ts,src/polyfills.ts,**/*environment*.ts,**/*module.ts
                sonar.javascript.lcov.reportPaths=coverage/caff-store/lcov.info
          - task: Npm@1
            displayName: Npm ci
            inputs:
              command: 'ci'
              workingDir: $(workingDirectory)
          - task: Npm@1
            displayName: Test
            inputs:
              command: 'custom'
              customCommand: 'run test -- --watch=false --browsers ChromeHeadless --code-coverage'
              workingDir: '$(workingDirectory)'
          - task: SonarCloudAnalyze@1
          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'
  - stage: Docker
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: Docker
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'containerRegistry'
              repository: 'caffly-frontend'
              command: 'buildAndPush'
              Dockerfile: $(workingDirectory)/Dockerfile
              buildContext: $(workingDirectory)
              tags: 'latest'
  - stage: Deploy
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: Deploy
        steps:
          - checkout: none
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'Azure for Students(96a88808-5be2-437f-8629-6c45fba7e081)'
              appName: 'caffly'
              containers: 'caffly.azurecr.io/caffly-frontend:latest'